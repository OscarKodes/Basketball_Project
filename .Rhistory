colnames(NBA_data)
# Selected only needed columns
typeof(colnames(NBA_data))
# Selected only needed columns
my_vector <- colnames(NBA_data)
columns_to_keep <- my_vector[! my_vector %in% c("draft_team",
"draft_pick",
"draft_round",
"high_school",
"nationality",
"League",
"Stage")]
NBA_data <- select(data, columns_to_keep)
NBA_data <- select(NBA_data, columns_to_keep)
columns_to_keep
NBA_data2 <- NBA_data[NBA_data == columns_to_keep, ]
colnames(NBA_data2)
# Clear Everything
rm(list = ls())
# Set working directory
setwd("C:/Users/Oscar Ko/Desktop/BasketBall_Project")
# Get working directory
getwd()
# Get data
salary_data <- read.csv("basketball_player_Salaries.csv")
basketball_data <- read.csv("players_stats_by_season_full_details.csv")
# Filter out only NBA League and only regular season
filter_league <- basketball_data$League == "NBA"
filter_stage <- basketball_data$Stage == "Regular_Season"
NBA_data <- basketball_data[filter_league && filter_stage, ]
# Selected only needed columns
cols_to_remove <- c("draft_team",
"draft_pick",
"draft_round",
"high_school",
"nationality",
"League",
"Stage")
NBA_data2 <- NBA_data[!(NBA_data %in% cols_to_remove), ]
colnames(NBA_data2)
NBA_data2 <- NBA_data[!NBA_data %in% cols_to_remove, ]
colnames(NBA_data2)
cols_to_keep <- NBA_data[! NBA_data %in% cols_to_remove]
cols_to_keep
# Selected only needed columns
c_names <- colnames(NBA_data)
cols_to_remove <- c("draft_team",
"draft_pick",
"draft_round",
"high_school",
"nationality",
"League",
"Stage")
cols_to_keep <- c_names[! c_names %in% cols_to_remove]
cols_to_keep
NBA_data <- NBA_data[cols_to_keep, ]
colnames(NBA_data)
NBA_data <- NBA_data[cols_to_keep, ]
colnames(NBA_data)
cols_to_keep
NBA_data <- NBA_data[NBA_data == cols_to_keep, ]
colnames(NBA_data)
cols_to_keep
# Clear Everything
rm(list = ls())
# Set working directory
setwd("C:/Users/Oscar Ko/Desktop/BasketBall_Project")
# Get working directory
getwd()
# Get data
salary_data <- read.csv("basketball_player_Salaries.csv")
basketball_data <- read.csv("players_stats_by_season_full_details.csv")
# Filter out only NBA League and only regular season
filter_league <- basketball_data$League == "NBA"
filter_stage <- basketball_data$Stage == "Regular_Season"
NBA_data <- basketball_data[filter_league && filter_stage, ]
# Selected only needed columns
c_names <- colnames(NBA_data)
cols_to_remove <- c("draft_team",
"draft_pick",
"draft_round",
"high_school",
"nationality",
"League",
"Stage")
filter_cols <- !(c_names %in% cols_to_remove)
NBA_data <- NBA_data[filter_cols, ]
colnames(NBA_data)
NBA_data <- basketball_data[filter_league && filter_stage, ]
NBA_data <- NBA_data[, filter_cols]
colnames(NBA_data)
colnames(salary_data)
head(NBA_data)
head(salary_data)
# Turn Year data into Season
salary_data <- mutate(salary_data,
Season=paste(as.character(year - 1), as.character(year), sep=" - "))
head(salary_data)
tail(salary_data)
head(NBA_data)
# Select columns to keep
colnames(salary_data)
salary_data <- select(salary_data,
Player="name",
Position="position",
Team="team",
Salary="salary",
"Season")
salary_data
head(salary_data)
# merge
merged_data <- merge(NBA_data, salary_data, by = c("Player","Season"))
head(merged_data)
head(NBA_data)
head(NBA_data[NBA_data$Player == "Aaron Brooks"],)
NBA_data[NBA_data$Player == "Aaron Brooks"]
NBA_data[NBA_data$Player == "Aaron Brooks",]
unique(NBA_data$Stage)
Unique(NBA_data$Stage)
NBA_data <- basketball_data[filter_league && filter_stage, ]
unique(NBA_data$Stage)
unique(NBA_data$League)
NBA_data <- basketball_data[filter_league, ]
unique(NBA_data$League)
NBA_data <- NBA_data[filter_stage, ]
unique(NBA_data$Stage)
# Filter out only NBA League and only regular season
filter_NBA <- (basketball_data$League == "NBA") && (basketball_data$Stage == "Regular_Season")
NBA_data <- basketball_data[filter_NBA, ]
unique(NBA_data$League)
# Filter out only NBA League and only regular season
filter_league <- basketball_data$League == "NBA"
NBA_data <- basketball_data[filter_league, ]
unique(NBA_data$League)
filter_state <- NBA_data$Stage == "Regular_Season")
filter_state <- NBA_data$Stage == "Regular_Season"
NBA_data <- NBA_data[filter_stage, ]
unique(NBA_data$Stage)
filter_stage <- NBA_data$Stage == "Regular_Season"
NBA_data <- NBA_data[filter_stage, ]
unique(NBA_data$Stage)
# Clear Everything
rm(list = ls())
# Set working directory
setwd("C:/Users/Oscar Ko/Desktop/BasketBall_Project")
# Get working directory
getwd()
# Get data
salary_data <- read.csv("basketball_player_Salaries.csv")
basketball_data <- read.csv("players_stats_by_season_full_details.csv")
library(tidyverse)
# Filter out only NBA League and only regular season
filter_league <- basketball_data$League == "NBA"
NBA_data <- basketball_data[filter_league, ]
unique(NBA_data$League)
filter_stage <- NBA_data$Stage == "Regular_Season"
NBA_data <- NBA_data[filter_stage, ]
unique(NBA_data$Stage)
# Filter out unneeded columns
c_names <- colnames(NBA_data)
cols_to_remove <- c("draft_team",
"draft_pick",
"draft_round",
"high_school",
"nationality",
"League",
"Stage")
filter_cols <- !(c_names %in% cols_to_remove)
NBA_data <- NBA_data[, filter_cols]
# Cleaning salary_data dataframe ============================
# Turn Year data into Season
salary_data <- mutate(salary_data,
Season=paste(as.character(year - 1),
as.character(year), sep=" - "))
# Select columns to keep
colnames(salary_data)
salary_data <- select(salary_data,
Player="name",
Position="position",
Team="team",
Salary="salary",
"Season")
head(salary_data)
# Combining data frames =====================================
# merge
merged_data <- merge(NBA_data, salary_data, by = c("Player","Season"))
head(merged_data)
tail(merged_data)
# rename team columns
colnames(merged_data$Team.x) <- Team_Code
# rename team columns
colnames(merged_data$Team.x) <- "Team_Code"
# rename team columns
names(merged_data)[names(merged_data) == "Team.x"] <- "Team_Code"
names(merged_data)[names(merged_data) == "Team.y"] <- "Team_Name"
colnames(merged_data)
# Create csv file of merged data
write.csv(merged_data, file = "merged_data.csv", row.names=F)
# Clear Everything
rm(list = ls())
# Set working directory
setwd("C:/Users/Oscar Ko/Desktop/BasketBall_Project")
# Get working directory
getwd()
# Get data
salary_data <- read.csv("basketball_player_Salaries.csv")
basketball_data <- read.csv("players_stats_by_season_full_details.csv")
library(tidyverse)
ball_data dataframe ============================
# Filter out only NBA League and only regular season
filter_league <- basketball_data$League == "NBA"
NBA_data <- basketball_data[filter_league, ]
unique(NBA_data$League)
filter_stage <- NBA_data$Stage == "Regular_Season"
NBA_data <- NBA_data[filter_stage, ]
unique(NBA_data$Stage)
# Filter out unneeded columns
c_names <- colnames(NBA_data)
cols_to_remove <- c("draft_team",
"draft_pick",
"draft_round",
"high_school",
"nationality",
"League",
"Stage")
filter_cols <- !(c_names %in% cols_to_remove)
NBA_data <- NBA_data[, filter_cols]
# Turn Year data into Season
salary_data <- mutate(salary_data,
Season=paste(as.character(year - 1),
as.character(year), sep=" - "))
# Select columns to keep
colnames(salary_data)
salary_data <- select(salary_data,
Player="name",
Position="position",
Team="team",
Salary="salary",
"Season")
head(salary_data)
merged_data <- merge(NBA_data, salary_data, by = c("Player","Season"))
head(merged_data)
tail(merged_data)
# rename team columns
names(merged_data)[names(merged_data) == "Team.x"] <- "Team_Code"
names(merged_data)[names(merged_data) == "Team.y"] <- "Team_Name"
colnames(merged_data)
new_col_names <- c("Player",
"Season",
"Team_Code",
"Games_Played",
"Minutes_Played",
"Field_Goals_Made",
"Field_Goal_Attempts",
"3_Pointers_Made",
"3_Pointers_Attempts",
"Free_Throws_Made",
"Free_Throw_Attempts",
"Turnovers",
"Personal_Fouls",
"Offensive_Rebounds",
"Defensive_Rebounds",
"All_Rebounds",
"Assists",
"Steals",
"Blocks",
"Total_Points_Made",
"birth_year",
"birth_month",
"birth_date",
"height",
"height_cm",
"weight",
"weight_kg",
"Position",
"Team_Name",
"Salary")
colnames(merged_data) <- new_col_names
colnames(merged_data)
# Create some new columns ===================================
merged_data$Free_Throw_Accuracy <- round(Free_Throws_Made / Free_Throw_Attempts, 2)
# Create some new columns ===================================
merged_data$Free_Throw_Accuracy <- round(merged_data$Free_Throws_Made / merged_data$Free_Throw_Attempts, 2)
head(merged_data$Free_Throw_Accuracy)
merged_data$dollars_per_points <- round(merged_data$Total_Points_Made / merged_data$Salary)
head(merged_data$dollars_per_points)
merged_data$dollars_per_points <- round(merged_data$Salary / merged_data$Total_Points_Made)
head(merged_data$dollars_per_points)
merged_data$Field_Goal_Accuracy <- round(merged_data$Field_Goals_Made / merged_data$Field_Goal_Attempts, 2)
merged_data["3_Pointer_Accuracy"] <- round(merged_data["3_Pointers_Made"] / merged_data$["3_Pointers_Attempts"], 2)
# Clear Everything
rm(list = ls())
# Set working directory
setwd("C:/Users/Oscar Ko/Desktop/BasketBall_Project")
# Get working directory
getwd()
# Get data
salary_data <- read.csv("basketball_player_Salaries.csv")
basketball_data <- read.csv("players_stats_by_season_full_details.csv")
# Examine data
# library
library(tidyverse)
# Cleaning basketball_data dataframe ============================
# Filter out only NBA League and only regular season
filter_league <- basketball_data$League == "NBA"
NBA_data <- basketball_data[filter_league, ]
unique(NBA_data$League)
filter_stage <- NBA_data$Stage == "Regular_Season"
NBA_data <- NBA_data[filter_stage, ]
unique(NBA_data$Stage)
# Filter out unneeded columns
c_names <- colnames(NBA_data)
cols_to_remove <- c("draft_team",
"draft_pick",
"draft_round",
"high_school",
"nationality",
"League",
"Stage")
filter_cols <- !(c_names %in% cols_to_remove)
NBA_data <- NBA_data[, filter_cols]
# Cleaning salary_data dataframe ============================
# Turn Year data into Season
salary_data <- mutate(salary_data,
Season=paste(as.character(year - 1),
as.character(year), sep=" - "))
# Select columns to keep
colnames(salary_data)
salary_data <- select(salary_data,
Player="name",
Position="position",
Team="team",
Salary="salary",
"Season")
head(salary_data)
# Combining data frames =====================================
# merge
merged_data <- merge(NBA_data, salary_data, by = c("Player","Season"))
head(merged_data)
tail(merged_data)
# rename team columns
names(merged_data)[names(merged_data) == "Team.x"] <- "Team_Code"
names(merged_data)[names(merged_data) == "Team.y"] <- "Team_Name"
colnames(merged_data)
new_col_names <- c("Player",
"Season",
"Team_Code",
"Games_Played",
"Minutes_Played",
"Field_Goals_Made",
"Field_Goal_Attempts",
"Three_Pointers_Made",
"Three_Pointers_Attempts",
"Free_Throws_Made",
"Free_Throw_Attempts",
"Turnovers",
"Personal_Fouls",
"Offensive_Rebounds",
"Defensive_Rebounds",
"All_Rebounds",
"Assists",
"Steals",
"Blocks",
"Total_Points_Made",
"birth_year",
"birth_month",
"birth_date",
"height",
"height_cm",
"weight",
"weight_kg",
"Position",
"Team_Name",
"Salary")
colnames(merged_data) <- new_col_names
colnames(merged_data)
merged_data$Free_Throw_Accuracy <- round(merged_data$Free_Throws_Made / merged_data$Free_Throw_Attempts, 2)
merged_data$Field_Goal_Accuracy <- round(merged_data$Field_Goals_Made / merged_data$Field_Goal_Attempts, 2)
merged_data$Three_Pointers_Accuracy <- round(merged_data$Three_Pointers_Made / merged_data$Three_Pointers_Attempts, 2)
merged_data$avg_minutes_per_game <- round(merged_data$Minutes_Played / merged_data$Games_Played, 2)
# Create csv file of merged data
write.csv(merged_data, file = "merged_data.csv", row.names=F)
merged_data$avg_minutes_per_game <- ifelse(is.na(merged_data$avg_minutes_per_game),
0, merged_data$avg_minutes_per_game)
View(merged_data)
merged_data$avg_minutes_per_game <- ifelse(is.nan(merged_data$avg_minutes_per_game),
0, merged_data$avg_minutes_per_game)
merged_data$avg_minutes_per_game <- ifelse(merged_data$avg_minutes_per_game == NaN,
0, merged_data$avg_minutes_per_game)
View(merged_data)
merged_data$avg_minutes_per_game <- round(merged_data$Minutes_Played / merged_data$Games_Played, 2)
merged_data$avg_minutes_per_game <- ifelse(is.nan(merged_data$Three_Pointers_Accuracy),
0, merged_data$Three_Pointers_Accuracy)
is.nan(NaN)
merged_data$avg_minutes_per_game <- ifelse(is.nan(merged_data$Three_Pointers_Accuracy),
0, merged_data$Three_Pointers_Accuracy)
View(merged_data)
merged_data$avg_minutes_per_game <- round(merged_data$Minutes_Played / merged_data$Games_Played, 2)
merged_data$Three_Pointers_Accuracy <- ifelse(is.nan(merged_data$Three_Pointers_Accuracy),
0, merged_data$Three_Pointers_Accuracy)
# Create csv file of merged data
write.csv(merged_data, file = "merged_data.csv", row.names=F)
write.csv(merged_data, file = "merged_data.csv", row.names=F)
rm(list = ls())
# Set working directory
setwd("C:/Users/Oscar Ko/Desktop/BasketBall_Project")
# Get working directory
getwd()
# Get data
salary_data <- read.csv("basketball_player_Salaries.csv")
basketball_data <- read.csv("players_stats_by_season_full_details.csv")
# library
library(tidyverse)
# Cleaning basketball_data dataframe ============================
# Filter out only NBA League and only regular season
filter_league <- basketball_data$League == "NBA"
NBA_data <- basketball_data[filter_league, ]
unique(NBA_data$League)
filter_stage <- NBA_data$Stage == "Regular_Season"
NBA_data <- NBA_data[filter_stage, ]
unique(NBA_data$Stage)
# Filter out unneeded columns
c_names <- colnames(NBA_data)
cols_to_remove <- c("draft_team",
"draft_pick",
"draft_round",
"high_school",
"nationality",
"League",
"Stage")
filter_cols <- !(c_names %in% cols_to_remove)
NBA_data <- NBA_data[, filter_cols]
# Cleaning salary_data dataframe ============================
# Turn Year data into Season
salary_data <- mutate(salary_data,
Season=paste(as.character(year - 1),
as.character(year), sep=" - "))
# Select columns to keep
colnames(salary_data)
salary_data <- select(salary_data,
Player="name",
Position="position",
Team="team",
Salary="salary",
"Season")
head(salary_data)
# Combining data frames =====================================
# merge
merged_data <- merge(NBA_data, salary_data, by = c("Player","Season"))
head(merged_data)
tail(merged_data)
# rename team columns
names(merged_data)[names(merged_data) == "Team.x"] <- "Team_Code"
names(merged_data)[names(merged_data) == "Team.y"] <- "Team_Name"
colnames(merged_data)
# rename abbreviated columns
new_col_names <- c("Player",
"Season",
"Team_Code",
"Games_Played",
"Minutes_Played",
"Field_Goals_Made",
"Field_Goal_Attempts",
"Three_Pointers_Made",
"Three_Pointers_Attempts",
"Free_Throws_Made",
"Free_Throw_Attempts",
"Turnovers",
"Personal_Fouls",
"Offensive_Rebounds",
"Defensive_Rebounds",
"All_Rebounds",
"Assists",
"Steals",
"Blocks",
"Total_Points_Made",
"birth_year",
"birth_month",
"birth_date",
"height",
"height_cm",
"weight",
"weight_kg",
"Position",
"Team_Name",
"Salary")
colnames(merged_data) <- new_col_names
colnames(merged_data)
merged_data$Cost_Per_Point <- round(merged_data$Salary / merged_data$Total_Points_Made, 2)
colnames(merged_data)
head(merged_data$Cost_Per_Point)
# Create csv file of merged data
write.csv(merged_data, file = "merged_data.csv", row.names=F)
min(merged_data$Cost_Per_Point)
summary(merged_data$Cost_Per_Point)
summary(merged_data$Cost_Per_Point)
merged_data[merged_data$Cost_Per_Point == 264,]
min(merged_data$Cost_Per_Point)
min(merged_data$Cost_Per_Point, na.rm = T)
merged_data[merged_data$Cost_Per_Point == min_cost_per_pt,]
min_cost_per_pt <- min(merged_data$Cost_Per_Point, na.rm = T)
merged_data[merged_data$Cost_Per_Point == min_cost_per_pt,]
merged_data$Cost_Per_Point == min_cost_per_pt
merged_data[most_cost_effective,]
most_cost_effective <- merged_data$Cost_Per_Point == min_cost_per_pt
merged_data[most_cost_effective,]
min_cost_per_pt <- min(merged_data$Cost_Per_Point, na.rm = F)
most_cost_effective <- merged_data$Cost_Per_Point == min_cost_per_pt
min_cost_per_pt <- min(merged_data$Cost_Per_Point, na.rm = T)
most_cost_effective <- merged_data$Cost_Per_Point == min_cost_per_pt
most_cost_effective <- !is.na(merged_data$Cost_Per_Point) & merged_data$Cost_Per_Point == min_cost_per_pt
merged_data[most_cost_effective,]
